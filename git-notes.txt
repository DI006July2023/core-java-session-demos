pre-requisites
---------------
1. make sure git is installed in your local computer
2. create a GitHub account in the GitHub website

images referred to
-------------------
CVCS(Centralized Version Constrol Software) vs DVCS(Distributed Version Constrol Software)
	- https://k21academy.com/wp-content/uploads/2020/07/dvcs.png
git diagram
	- https://champlintechnologiesllc.com/wp-content/uploads/2017/07/git-basic_600x492.jpg
	- https://external-preview.redd.it/2mqNv1xwHnQtZtKQTGg7uPws76QcJI6UDmPi53tB6ng.jpg?auto=webp&s=0b416b4e3f2fcde21f005210d6b2cc4c804507f8
git workflow
	- https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow

terms
------
remote repository
local repository

steps done in todays(7th Aug) session
-------------------------------------
1) create a remote repository in our github account , we created a remote repository called git-trial
2) create a working diretory in your local computer, a working directory is just a folder in your local computer, we created git-practise
3) create some files in the working directory like sample.txt
4) create the local repository in your working directory, 
	- for this open git bash in your working directory, 
	- git bash is a terminal where you can type your git commands
	- run the command
		- git init
5) a hidden folder in the name .git is created. This .git folder is my local repository
	- deleting the .git folder is like deleting the local repository

6) configure git user name and email - refer engage
7) git config --list
	- this command list all the git configuraion
8) add all the files from working directory to the staging
	- git add .
9) commit the files to the local repository
	- git commit -m "first commit"
10) change the branch name from master to main in local repo
	- git branch -M main
11) set the remote repository to which we will push the code in step 12
	- git remote add origin https://github.com/DI006July2023/git-trial.git
12) push the code to the remote repository
	- git push -u origin main

DOS - Disk Operating system
unix - 

the demo was done with gitbash
------------------------------
other ways in which you can run your git commands
	- gitbash
		- it is a unix/linux terminal
		- here we type the git commands
		- we get git bash when we install git in our local computer
	- github desktop
		- here we don't type the command, we click buttons and the work is done
	- ide plugins
		- here git plugins are installed in the IDE
		- and files are pushed and pulled directly from the IDE
	- sourcetree
		- used extensively in projects
		- helps to have a visual idea of the branches and repos created

ways to get the files from the remote repository to the local computer
------------------------------------------------------------------------
1) download the remote repo

2) clone the repo
	- git clone <github repo url>
	- when we clone, the entire repo comes to your local laptop
	- and the .git folder(local repository) will be present
	- we clone the repo only once
	- and pull the repo to your local computer every time changes are made to the remote repository
	
3) pull the repo
	- pull the repo to your local computer every time changes are made to the remote repository


working with git branches
-------------------------
1) my remote repo has a main branch
2) origin main -  refers to the main branch in the remote repo
3) main/master - refers to the main branch in the local repo, if it is master change it to main
4) change master branch to main branch in local repository
	- git branch -M main
5) from the main branch a develop branch is created in the remote
6) lets say a developer starts working on a user story
	- should first pull the develop the branch to the local
	- creates a feature branch in the name feature/US001
	- starts working on this feature branch
	- if at any point of time he/she wants to discard the changes, can delete the feature branch and create again
	- push the code upstream to the feature branch in the remote
	- and then raise a pull request - this is raised to merge the feature branch with the develop branch
	- merge conflicts can arise and that is a whole new story

recommended levels to push yourself with git
---------------------------------------------
LEVEL 1 - do a simple push and pull 
LEVEL 2 - work with branches and pull request
LEVEL 3 - resolve merge conflicts

working with branches in the demo
---------------------------------
1) create a remote repo git-branch-demo repo
2) create a local repo git-branch-demo-local
3) created a sample.txt file in working directory and pushed it remote
4) this local repo has the main branch
5) to list the branches in local
	- git branch
6) create a branch in the name feature/US001 in the local
	- git branch feature/US001
7) switch from main branch to feature/US001 branch in local
8) add a new file US001Login.txt to the working dir
9) now in git bash
	 git push --set-upstream origin feature/US001
   this command pushes the code from local to remote branch feature/US001(the remote branch gets created)
10) now the developer can raise a pull request
11) while raising the pull request specify which branch has to be merged to which branch
12) and create the pull request
13) another person from the team will review the pull request and merge the pull request

